---
title: "modelling"
author: "Grant Quattlebaum"
format: html
execute:
  echo: false
---

```{r}
#| message: false
#| label: setup
#| warning: false

library(tidyverse)
library(dplyr)
library(readr)
library(brms)
library(tidybayes)
library(gtsummary)
library(webshot2)

setwd("data/")
standard_data <- list.files(pattern = "card-ratings") |>
  lapply(read_csv) |>
  bind_rows()
card_text_data <- read_csv("cards.csv")
setwd("..")
```

```{r}
#| label: clean
  
c_standard_data <- standard_data |>
  rename(GIH_WR = `GIH WR`) |>
  #Have GIH_WR stored in R numerically for manipulation
  mutate(GIH_WR = as.numeric(sub("%","",GIH_WR))) |>
  select(Name, Color, Rarity, GIH_WR)

#Select the current standard sets
c_card_data <-
  #Select the last two years of Standard-legal draftable Magic sets
  card_text_data[card_text_data$setCode %in% c("BRO", "LCI", "MKM", "MOM", "ONE", "OTJ", "WOE", "BRR", "OTP", "BIG", "DMU"),] |>
  select(name, manaValue, power, toughness, types, keywords) |>
  rename(Name = name) |>
  #Some cards are reprinted in multiple sets: this shouldn't cause issues with our analysis (the variables we care about from this data should remain constant), but just to be safe we delete duplicates
  distinct(.keep_all = TRUE) 

# Below code removes 2nd name for double sided cards: note that if modal double sided cards are in the data, this would have to change to account for both sides of the card.
c_card_data$Name <- ifelse(grepl(" // ", c_card_data$Name), sub(" // .*", "", c_card_data$Name), c_card_data$Name)
```

```{r}
#| label: merge

merged_data <- c_standard_data |>
  left_join(c_card_data, join_by(Name), relationship =
  "many-to-many") 

```

```{r}
#| label: model_1
#| cache: true

first_fit <- brm(formula = GIH_WR ~ Rarity + manaValue + Rarity * manaValue,
                   data = merged_data,
                   family = gaussian(),
                   refresh = 0,
                   silent = 2,
                   seed = 31)

```

```{r}
#| label: graph_1

pp_check(first_fit)


mana_rarity_reg_table <- first_fit |> tbl_regression()
mana_rarity_reg_table

#Below chunk saves table as png, enable if you want this
# gt::gtsave(as_gt(mana_rarity_reg_table), "mana_rarity_reg_table.png")

Rarity = c("C", "U", "R", "M")
manaValue = c(1,2,3,4,5)
ndata <- expand_grid(Rarity, manaValue)
#reorder puts the columns generated in a more readable order for us"
reorder <- c("1 Mana Commons", "2 Mana Commons", "3 Mana Commons", "4 Mana Commons", "5 Mana Commons", "1 Mana Uncommons", "2 Mana Uncommons", "3 Mana Uncommons", "4 Mana Uncommons", "5 Mana Uncommons", "1 Mana Rares", "2 Mana Rares", "3 Mana Rares", "4 Mana Rares", "5 Mana Rares", "1 Mana Mythic Rares", "2 Mana Mythic Rares", "3 Mana Mythic Rares", "4 Mana Mythic Rares", "5 Mana Mythic Rares")

fixed_plot <- first_fit |> add_epred_draws(newdata = ndata) |>
  ungroup() |>
  #This...odd line is to make the names pivot_wider generates more readable, so we get 3_Mana Common, for example.
  mutate(Rarity = recode(Rarity, C = "Mana Commons", U = "Mana Uncommons", R = "Mana Rares", M = "Mana Mythic Rares")) |>
  select(Rarity, manaValue, .epred) |>
  pivot_wider(names_from = c(manaValue, Rarity),
              values_from = .epred,
              values_fn = list) |>
  unnest(cols = everything()) |>
  pivot_longer(cols = everything(), names_to = "Category", values_to = "epred") |> 
  #ColorGroup lets us group the manacosts by color in the graph, for readability
  mutate(ColorGroup = as.factor(substr(Category, 1, 1)))

fixed_plot$Category <- gsub("_", " ", fixed_plot$Category)

main_graph <- fixed_plot |> mutate(Category =    fct_relevel(factor(Category), reorder)) |> 
  ggplot(aes(x = epred, y = Category)) +
    stat_slab(aes(fill = ColorGroup), color = "black", alpha = 0.7) +
    labs(title = "Posteriors for Card Win Rate Given Rarity and Mana Cost", subtitle = "Higher mana costs imply better high rarity cards, but worse low rarity cards",
       x = "Predicted Win Rate (Percentage)",
       y = "Rarity and Mana Cost") +
    theme(legend.position = "none")

main_graph
ggsave("main_graph.png", main_graph)
```

```{r}
#| label: graph_2

reorder <- c("1 Mana Commons", "2 Mana Commons", "3 Mana Commons", "4 Mana Commons", "5 Mana Commons", "1 Mana Uncommons", "2 Mana Uncommons", "3 Mana Uncommons", "4 Mana Uncommons", "5 Mana Uncommons", "1 Mana Rares", "2 Mana Rares", "3 Mana Rares", "4 Mana Rares", "5 Mana Rares", "2 Mana Mythic Rares", "3 Mana Mythic Rares", "4 Mana Mythic Rares", "5 Mana Mythic Rares")



blb_cards <- read_csv("data/blb-card-ratings-2024-08-06.csv") |>
  rename(GIH_WR = `GIH WR`) |>
  #Have GIH_WR stored in R numerically for manipulation
  mutate(GIH_WR = as.numeric(sub("%","",GIH_WR))) |>
  select(Name, Rarity, GIH_WR)
blb_card_data <- card_text_data[card_text_data$setCode %in% c("BLB"),] |> select(name, manaValue) |>
   rename(Name = name)

merged_blb <- blb_cards |>
  left_join(blb_card_data, join_by(Name), relationship =
  "many-to-many")

blb_winrates <- merged_blb[merged_blb$manaValue %in% c(1,2,3,4,5), ] |>
  mutate(Rarity = recode(Rarity, C = "Mana Commons", U = "Mana Uncommons", R = "Mana Rares", M = "Mana Mythic Rares")) |>
  mutate(Rarity = fct_relevel(factor(Rarity), c("Mana Commons", "Mana Uncommons", "Mana Rares", "Mana Mythic Rares"))) 
  
blb_winrates$Category <- paste(blb_winrates$manaValue, blb_winrates$Rarity, sep = " ")
  
blb_winrates <- blb_winrates |>
  mutate(Category = fct_relevel(factor(Category), reorder)) |>
  group_by(Category) |>
  summarise(avg_GIH_WR = mean(GIH_WR, na.rm = TRUE))

blb_winrates 

alt_graph <- main_graph + geom_point(data = blb_winrates, aes(x = avg_GIH_WR, y = Category), color = "red", size = 3)

alt_graph

ggsave("pred_graph.png", alt_graph)

```
